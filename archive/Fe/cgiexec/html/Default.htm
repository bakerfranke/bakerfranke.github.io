<html><head>
<title>
CGIexecutor - Help
</title>
<body bgcolor=#ffffff text=#000000>
<a name="top">
<table border=2 bgcolor=#fabb00>
<tr>
<td bgcolor=#000000><b><font size=+2 color=#ff0000>CGI</font><font size=+1 color=#fabb00>Executor</font></b></td>
</tr>
</table>
<hr>
<h1>
<b>CGIexecutor</b>
</h1>
<b><i>
Cgiexecutor for Windows 95/NT4.0<br>
version 1.02, 1998<br>
Author: Goran Boban <a href="mailto:gboban@cursor.net">gboban@cursor.net</a>
</b></i><br>
<h2>Contents :</h2>
<ul>
<li><a href="#about"><i>About CGIexecutor</i></a>
<li><a href="#install"><i>How to install CGIexecutor</i></a>
<li><a href="#how"><i>How CGIexecutor works</i></a>
<li><a href="#new"><i>What's new in version 1.02</i></a>
<li><a href="register.htm"><i>How to register</i><br>
</ul>
<hr>

<p>
<ul>
<a name="about">
<table border=0 bgcolor=#ffffff>
<tr><td bgcolor=#fabb00>
<b><i>About CGIexecutor</i></b>
</td></tr>
</table>
CGIexecutor is mainly written to do all 'dirty' CGI handling for an external program
which it will execute. But, with its powerful and easy to use interface, CGIexecutor can
be used to manage number of different CGI forms, even without executing an external
program.<br>
Following are some features of CGIexecutor:<br><br>
<ul>
<li><i>Managing complex projects based on several forms</i><br><br>
<li><i>Support for creating response pages based on templates</i><br><br>
<li><i>Creating template based input files for programs which will be executed by CGIexecutor</i><br><br>
<li><i>Customizable template based error reports</i><br><br>
<li><i>Checking for required variables</i><br><br>
</ul>
And that is not all: With CGIexecutor You can build useful and powerful CGI handlers
for Your forms by using simple environments like MS-DOS batch scripts (<b>.bat</b>)
which CGIexecutor can preprocess and pass to command.com or cmd.exe,
or You can use any other interpreter along with CGIexecutor.<br><br>

Moreover You can use CGIexecutor alone without executing any other programs to handle
useful things like:<br><br>
<ul>
<li><i>Checking if all required entries are filled</i><br><br>
<li><i>Handle remembering information entered on several different pages</i><br><br>
</ul>
Or You can save files preprocessed by CGIexecutor to Your disk
with a single command passed to Your system.
<br><br>
Additionally CGIexecutor provides access to environment variables on Your system in any
of project files to help You build Your projects.
And You can also access several useful internal variables of CGIexecutor.

</ul>
</p>

<p>
<ul>
<a name="install">
<table border=0 bgcolor=#ffffff>
<tr><td bgcolor=#fabb00>
<b><i>How to install CGIexecutor</i></b>
</td></tr>
</table>
When You unpack CGIex101.exe archive You will find following
directories:<br><br>

<ul>
<li><b>bin</b><br>
This directory contains binaries (<i>i.e. programs</i>) distributed with CGIexecutor
package.<br><br>

<li><b>html</b><br>
Html directory contains documentation for CGIexecutor in HTML form.<br><br>

<li><b>demo</b><br>
This directory contains sample projects for CGIexecutor to help You learn how to
use CGIexecutor.<br><br>

</ul>

You can install CGIexecutor in two ways:<br><br>

<ul>

<li><b>I</b><br>
First (and simpler) way to install CGIexecutor is to add directories with CGIexecutor
package to directories Your HTTP server will search. To do so see documentation for
Your HTTP server. You have to provide following names and access rights for directories:<br><br>

<ul>
<li><i>bin</i><br>
Name: /cgiexec/bin<br>
Access: Execute<br><br>

<li><i>html</i><br>
Name: /cgiexec/html<br>
Access: Read<br><br>

<li><i>demo</i><br>
This directory does not have to be in directory tree of Your HTTP server.<br><br>

</ul>

<i><b>NOTE: </b> Sample projects assume that CGIexecutor directories are stored in
/cgiexec directory in Your servers directory tree. If You specify other name
for this directory You have to edit files in demo directory to point to correct
location. Also edit sample front ends in html directory.</i><br><br>

<li><b>II</b><br>
Second way to install CGIexecutor is to copy files as follows:<br><br>

<ul>
<li><i>bin</i><br>
Copy files from this directory
to directory which have permission for programs to be executed
from Your web server.<br><br>

<li><i>html</i><br>
Copy files from html directory to directory which is
searched by Your HTTP server and has read access.<br>
This directory also contain front ends for sample projects which are
stored in <i>demo</i> directory. To make them work
You have to edit them to point
to <i>cgiexec.exe</i> on Your system.<br><br>
<li><i>demo</i><br>
This files does not have to be in directory which is accessible by web server
but they must be available for reading for other programs. To make these
samples to work correctly You have to edit all variables which contain
names of files to point to corresponding files on Your system.
<i>PATHS MUST BE RELATIVE TO CGIEXEC.EXE, OR ABSOLUTE PATHS.</i><br>
Also You have to edit templates when they contain references to <i>cgiexec.exe</i>
to point to URL where CGIexecutor is placed.<br><br>
</ul>
</ul>
</ul>
</p>

<p>
<ul>
<a name="how">
<table border=0 bgcolor=#ffffff>
<tr><td bgcolor=#fabb00>
<b><i>How CGIexecutor works</i></b>
</td></tr>
</table>
CGIexecutor works with so called 'projects' which can be put alone or
can be grouped in more complex projects.
Every project contains up to four 'project files' which will determine how CGIexecutor
will behave.<br>
In shortly every project will contain some or all of following files:<br><br>
<ul>
<li><i><b><a href="files.htm#config">Configuration file</a></b></i><br>
Configuration file is required in every project and is 'backbone' of every project
for CGIexecutor. In this file are specified names of other project files along with
other values required to run project like name of temporary directory in which input and
output file for external program will be created, command line to be executed by
CGIexecutor etc.
<br><br>
<li><i><b><a href="files.htm#template">Template for creating response</a></b></i><br>
This file is used to be base for creating response to user and is only file, except configuration
file, which is required in every project.<br><br>
<li><i><b><a href="files.htm#errtemplate">Error template</a></b></i><br>
CGIexecutor has set of error messages built in the program, but it can also be configured to
use error template file as template for error messages. This may be done by setting
ERRTEMPLATE variable in configuration file to point to file You want to use as template for
error messages in project.<br><br>
<li><i><b><a href="files.htm#cmdintemplate">Template for input file for executed program</a></b></i><br>
If an external program needs input file You can use this file as template for that input file.
CGIexecutor will process this file in order to create input for program.
<br><br>
</ul>
When started CGIexecutor will go through following steps:<br><br>
<ul>
<li>First it will get input from server to provide other parts of program access to
variables entered by user.<br><br>
<li>Secondly CGIexecutor will process project configuration file and set internal variables
as requested in configuration file.
Additionally it will do checking for <a href="variables.htm#usrvar">required variables</a>
in configuration file.<br><br>
<li>Now CGIexecutor will check all other project files for required variables, and if it
finds required variable which is not set it will generate an
<a href="errors.htm#e24">error 24</a>.
<li>Next if CMDINTEMPLATE variable is set in <a href="files.htm#config">configuration file</a>
CGIexecutor will process input file for external program. If CMDINTEMPLATE variable is not
set CGIexecutor will skip processing input file.<br><br>
<li>In this step CGIexecutor will execute program as specified in CMDLINE if this
variable is set in configuration file, otherwise CGIexecutor will skip this step.<br><br>
<li>Finally, CGIexecutor will create an response page and send it to user.<br><br>
</ul>

</ul>
</p>

<p>
<ul>
<a name="new">
<table border=0 bgcolor=#ffffff>
<tr><td bgcolor=#fabb00>
<b><i>What's new in version 1.02</i></b>
</td></tr>
</table>
<ul>
<p>
<li><i>Added TIMEOUT variable to configuration file.</i><br>
Now You can use TIMEOUT variable to tell CGIExecutor how much to wait for
external program to finish. If program does not finish before TIMEOUT
seconds CGIExecutor will terminate it and generate "timed out" error
(error code: 23). See
<a href="files.htm#config">configuration file</a> for more information.<br>
<br>
</ul>
</p>
</ul>
</p>

For additional information on CGIexecutor files and variables see following files:<br><br>
<ul>
<li><a href="files.htm">Project files</a><br><br>
<li><a href="variables.htm">Variable types</a><br><br>
<li><a href="errors.htm">Error codes</a><br><br>
<li><a href="samples.htm">Samples</a><br><br>
</ul>
<hr>
<a href="#top">[Top of page]</a>
</body>
</html>